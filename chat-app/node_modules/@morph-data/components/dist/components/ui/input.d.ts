import { default as React } from 'react';
import { VariantProps } from 'tailwind-variants';
declare const inputStyles: import('tailwind-variants').TVReturnType<{
    hasError: {
        true: string[];
    };
    enableStepper: {
        false: string;
    };
}, undefined, (string | string[])[], import('tailwind-variants/dist/config.js').TVConfig<{
    hasError: {
        true: string[];
    };
    enableStepper: {
        false: string;
    };
}, {
    hasError: {
        true: string[];
    };
    enableStepper: {
        false: string;
    };
}>, {
    hasError: {
        true: string[];
    };
    enableStepper: {
        false: string;
    };
}, undefined, import('tailwind-variants').TVReturnType<{
    hasError: {
        true: string[];
    };
    enableStepper: {
        false: string;
    };
}, undefined, (string | string[])[], import('tailwind-variants/dist/config.js').TVConfig<{
    hasError: {
        true: string[];
    };
    enableStepper: {
        false: string;
    };
}, {
    hasError: {
        true: string[];
    };
    enableStepper: {
        false: string;
    };
}>, unknown, unknown, undefined>>;
interface InputProps extends React.InputHTMLAttributes<HTMLInputElement>, VariantProps<typeof inputStyles> {
    inputClassName?: string;
}
declare const Input: React.ForwardRefExoticComponent<InputProps & React.RefAttributes<HTMLInputElement>>;
export { Input, inputStyles, type InputProps };
