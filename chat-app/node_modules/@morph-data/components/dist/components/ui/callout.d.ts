import { default as React } from 'react';
import { VariantProps } from 'tailwind-variants';
declare const calloutVariants: import('tailwind-variants').TVReturnType<{
    variant: {
        default: string[];
        success: string[];
        error: string[];
        destructive: string[];
        warning: string[];
        neutral: string[];
    };
}, undefined, "flex flex-col overflow-hidden rounded-md p-4 text-sm", import('tailwind-variants/dist/config.js').TVConfig<{
    variant: {
        default: string[];
        success: string[];
        error: string[];
        destructive: string[];
        warning: string[];
        neutral: string[];
    };
}, {
    variant: {
        default: string[];
        success: string[];
        error: string[];
        destructive: string[];
        warning: string[];
        neutral: string[];
    };
}>, {
    variant: {
        default: string[];
        success: string[];
        error: string[];
        destructive: string[];
        warning: string[];
        neutral: string[];
    };
}, undefined, import('tailwind-variants').TVReturnType<{
    variant: {
        default: string[];
        success: string[];
        error: string[];
        destructive: string[];
        warning: string[];
        neutral: string[];
    };
}, undefined, "flex flex-col overflow-hidden rounded-md p-4 text-sm", import('tailwind-variants/dist/config.js').TVConfig<{
    variant: {
        default: string[];
        success: string[];
        error: string[];
        destructive: string[];
        warning: string[];
        neutral: string[];
    };
}, {
    variant: {
        default: string[];
        success: string[];
        error: string[];
        destructive: string[];
        warning: string[];
        neutral: string[];
    };
}>, unknown, unknown, undefined>>;
interface CalloutProps extends React.ComponentPropsWithoutRef<"div">, VariantProps<typeof calloutVariants> {
    title: string;
    icon?: React.ElementType | React.ReactElement;
}
declare const Callout: React.ForwardRefExoticComponent<CalloutProps & React.RefAttributes<HTMLDivElement>>;
export { Callout, calloutVariants, type CalloutProps };
