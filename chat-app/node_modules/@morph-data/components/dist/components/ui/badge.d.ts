import { default as React } from 'react';
import { VariantProps } from 'tailwind-variants';
declare const badgeVariants: import('tailwind-variants').TVReturnType<{
    variant: {
        default: string[];
        neutral: string[];
        success: string[];
        error: string[];
        warning: string[];
    };
}, undefined, string, import('tailwind-variants/dist/config.js').TVConfig<{
    variant: {
        default: string[];
        neutral: string[];
        success: string[];
        error: string[];
        warning: string[];
    };
}, {
    variant: {
        default: string[];
        neutral: string[];
        success: string[];
        error: string[];
        warning: string[];
    };
}>, {
    variant: {
        default: string[];
        neutral: string[];
        success: string[];
        error: string[];
        warning: string[];
    };
}, undefined, import('tailwind-variants').TVReturnType<{
    variant: {
        default: string[];
        neutral: string[];
        success: string[];
        error: string[];
        warning: string[];
    };
}, undefined, string, import('tailwind-variants/dist/config.js').TVConfig<{
    variant: {
        default: string[];
        neutral: string[];
        success: string[];
        error: string[];
        warning: string[];
    };
}, {
    variant: {
        default: string[];
        neutral: string[];
        success: string[];
        error: string[];
        warning: string[];
    };
}>, unknown, unknown, undefined>>;
interface BadgeProps extends React.ComponentPropsWithoutRef<"span">, VariantProps<typeof badgeVariants> {
}
declare const Badge: React.ForwardRefExoticComponent<BadgeProps & React.RefAttributes<HTMLSpanElement>>;
export { Badge, badgeVariants, type BadgeProps };
