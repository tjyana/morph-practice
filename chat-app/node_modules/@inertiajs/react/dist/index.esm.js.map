{
  "version": 3,
  "sources": ["../src/index.ts", "../src/createInertiaApp.ts", "../src/App.ts", "../src/HeadContext.ts", "../src/PageContext.ts", "../src/Head.ts", "../src/Link.ts", "../src/useForm.ts", "../src/useRemember.ts", "../src/usePage.ts"],
  "sourcesContent": ["import { router as Router } from '@inertiajs/core'\n\nexport const router = Router\nexport { default as createInertiaApp } from './createInertiaApp'\nexport { default as Head } from './Head'\nexport { InertiaLinkProps, default as Link } from './Link'\nexport { InertiaFormProps, default as useForm } from './useForm'\nexport { default as usePage } from './usePage'\nexport { default as useRemember } from './useRemember'\n", "import { Page, PageProps, PageResolver, setupProgress } from '@inertiajs/core'\nimport { ComponentType, FunctionComponent, Key, ReactElement, ReactNode, createElement } from 'react'\nimport { renderToString } from 'react-dom/server'\nimport App from './App'\n\ntype ReactInstance = ReactElement\ntype ReactComponent = ReactNode\n\ntype HeadManagerOnUpdate = (elements: string[]) => void // TODO: When shipped, replace with: Inertia.HeadManagerOnUpdate\ntype HeadManagerTitleCallback = (title: string) => string // TODO: When shipped, replace with: Inertia.HeadManagerTitleCallback\n\ntype AppType<SharedProps extends PageProps = PageProps> = FunctionComponent<\n  {\n    children?: (props: { Component: ComponentType; key: Key; props: Page<SharedProps>['props'] }) => ReactNode\n  } & SetupOptions<unknown, SharedProps>['props']\n>\n\nexport type SetupOptions<ElementType, SharedProps extends PageProps> = {\n  el: ElementType\n  App: AppType\n  props: {\n    initialPage: Page<SharedProps>\n    initialComponent: ReactComponent\n    resolveComponent: PageResolver\n    titleCallback?: HeadManagerTitleCallback\n    onHeadUpdate?: HeadManagerOnUpdate\n  }\n}\n\ntype BaseInertiaAppOptions = {\n  title?: HeadManagerTitleCallback\n  resolve: PageResolver\n}\n\ntype CreateInertiaAppSetupReturnType = ReactInstance | void\ntype InertiaAppOptionsForCSR<SharedProps extends PageProps> = BaseInertiaAppOptions & {\n  id?: string\n  page?: Page | string\n  render?: undefined\n  progress?:\n    | false\n    | {\n        delay?: number\n        color?: string\n        includeCSS?: boolean\n        showSpinner?: boolean\n      }\n  setup(options: SetupOptions<HTMLElement, SharedProps>): CreateInertiaAppSetupReturnType\n}\n\ntype CreateInertiaAppSSRContent = { head: string[]; body: string }\ntype InertiaAppOptionsForSSR<SharedProps extends PageProps> = BaseInertiaAppOptions & {\n  id?: undefined\n  page: Page | string\n  render: typeof renderToString\n  progress?: undefined\n  setup(options: SetupOptions<null, SharedProps>): ReactInstance\n}\n\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>(\n  options: InertiaAppOptionsForCSR<SharedProps>,\n): Promise<CreateInertiaAppSetupReturnType>\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>(\n  options: InertiaAppOptionsForSSR<SharedProps>,\n): Promise<CreateInertiaAppSSRContent>\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>({\n  id = 'app',\n  resolve,\n  setup,\n  title,\n  progress = {},\n  page,\n  render,\n}: InertiaAppOptionsForCSR<SharedProps> | InertiaAppOptionsForSSR<SharedProps>): Promise<\n  CreateInertiaAppSetupReturnType | CreateInertiaAppSSRContent\n> {\n  const isServer = typeof window === 'undefined'\n  const el = isServer ? null : document.getElementById(id)\n  const initialPage = page || JSON.parse(el.dataset.page)\n  // @ts-expect-error\n  const resolveComponent = (name) => Promise.resolve(resolve(name)).then((module) => module.default || module)\n\n  let head = []\n\n  const reactApp = await resolveComponent(initialPage.component).then((initialComponent) => {\n    return setup({\n      // @ts-expect-error\n      el,\n      App,\n      props: {\n        initialPage,\n        initialComponent,\n        resolveComponent,\n        titleCallback: title,\n        onHeadUpdate: isServer ? (elements) => (head = elements) : null,\n      },\n    })\n  })\n\n  if (!isServer && progress) {\n    setupProgress(progress)\n  }\n\n  if (isServer) {\n    const body = await render(\n      createElement(\n        'div',\n        {\n          id,\n          'data-page': JSON.stringify(initialPage),\n        },\n        // @ts-expect-error\n        reactApp,\n      ),\n    )\n\n    return { head, body }\n  }\n}\n", "import { createHeadManager, router } from '@inertiajs/core'\nimport { createElement, useEffect, useMemo, useState } from 'react'\nimport HeadContext from './HeadContext'\nimport PageContext from './PageContext'\n\nexport default function App({\n  children,\n  initialPage,\n  initialComponent,\n  resolveComponent,\n  titleCallback,\n  onHeadUpdate,\n}) {\n  const [current, setCurrent] = useState({\n    component: initialComponent || null,\n    page: initialPage,\n    key: null,\n  })\n\n  const headManager = useMemo(() => {\n    return createHeadManager(\n      typeof window === 'undefined',\n      titleCallback || ((title) => title),\n      onHeadUpdate || (() => {}),\n    )\n  }, [])\n\n  useEffect(() => {\n    router.init({\n      initialPage,\n      resolveComponent,\n      swapComponent: async ({ component, page, preserveState }) => {\n        setCurrent((current) => ({\n          component,\n          page,\n          key: preserveState ? current.key : Date.now(),\n        }))\n      },\n    })\n\n    router.on('navigate', () => headManager.forceUpdate())\n  }, [])\n\n  if (!current.component) {\n    return createElement(\n      HeadContext.Provider,\n      { value: headManager },\n      createElement(PageContext.Provider, { value: current.page }, null),\n    )\n  }\n\n  const renderChildren =\n    children ||\n    (({ Component, props, key }) => {\n      const child = createElement(Component, { key, ...props })\n\n      if (typeof Component.layout === 'function') {\n        return Component.layout(child)\n      }\n\n      if (Array.isArray(Component.layout)) {\n        return Component.layout\n          .concat(child)\n          .reverse()\n          .reduce((children, Layout) => createElement(Layout, { children, ...props }))\n      }\n\n      return child\n    })\n\n  return createElement(\n    HeadContext.Provider,\n    { value: headManager },\n    createElement(\n      PageContext.Provider,\n      { value: current.page },\n      renderChildren({\n        Component: current.component,\n        key: current.key,\n        props: current.page.props,\n      }),\n    ),\n  )\n}\n\nApp.displayName = 'Inertia'\n", "import { createContext } from 'react'\n\nconst headContext = createContext(undefined)\nheadContext.displayName = 'InertiaHeadContext'\n\nexport default headContext\n", "import { createContext } from 'react'\n\nconst pageContext = createContext(undefined)\npageContext.displayName = 'InertiaPageContext'\n\nexport default pageContext\n", "import React, { FunctionComponent, useContext, useEffect, useMemo } from 'react'\nimport HeadContext from './HeadContext'\n\ntype InertiaHeadProps = {\n  title?: string\n  children?: React.ReactNode\n}\n\ntype InertiaHead = FunctionComponent<InertiaHeadProps>\n\nconst Head: InertiaHead = function ({ children, title }) {\n  const headManager = useContext(HeadContext)\n  const provider = useMemo(() => headManager.createProvider(), [headManager])\n\n  useEffect(() => {\n    return () => {\n      provider.disconnect()\n    }\n  }, [provider])\n\n  function isUnaryTag(node) {\n    return (\n      [\n        'area',\n        'base',\n        'br',\n        'col',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr',\n      ].indexOf(node.type) > -1\n    )\n  }\n\n  function renderTagStart(node) {\n    const attrs = Object.keys(node.props).reduce((carry, name) => {\n      if (['head-key', 'children', 'dangerouslySetInnerHTML'].includes(name)) {\n        return carry\n      }\n      const value = node.props[name]\n      if (value === '') {\n        return carry + ` ${name}`\n      } else {\n        return carry + ` ${name}=\"${value}\"`\n      }\n    }, '')\n    return `<${node.type}${attrs}>`\n  }\n\n  function renderTagChildren(node) {\n    return typeof node.props.children === 'string'\n      ? node.props.children\n      : node.props.children.reduce((html, child) => html + renderTag(child), '')\n  }\n\n  function renderTag(node) {\n    let html = renderTagStart(node)\n    if (node.props.children) {\n      html += renderTagChildren(node)\n    }\n    if (node.props.dangerouslySetInnerHTML) {\n      html += node.props.dangerouslySetInnerHTML.__html\n    }\n    if (!isUnaryTag(node)) {\n      html += `</${node.type}>`\n    }\n    return html\n  }\n\n  function ensureNodeHasInertiaProp(node) {\n    return React.cloneElement(node, {\n      inertia: node.props['head-key'] !== undefined ? node.props['head-key'] : '',\n    })\n  }\n\n  function renderNode(node) {\n    return renderTag(ensureNodeHasInertiaProp(node))\n  }\n\n  function renderNodes(nodes) {\n    const computed = React.Children.toArray(nodes)\n      .filter((node) => node)\n      .map((node) => renderNode(node))\n    if (title && !computed.find((tag) => tag.startsWith('<title'))) {\n      computed.push(`<title inertia>${title}</title>`)\n    }\n    return computed\n  }\n\n  provider.update(renderNodes(children))\n\n  return null\n}\nexport default Head\n", "import {\n  FormDataConvertible,\n  mergeDataIntoQueryString,\n  Method,\n  PreserveStateOption,\n  Progress,\n  router,\n  shouldIntercept,\n} from '@inertiajs/core'\nimport { createElement, forwardRef, useCallback } from 'react'\n\nconst noop = () => undefined\n\ninterface BaseInertiaLinkProps {\n  as?: string\n  data?: Record<string, FormDataConvertible>\n  href: string\n  method?: Method\n  headers?: Record<string, string>\n  onClick?: (event: React.MouseEvent<Element>) => void\n  preserveScroll?: PreserveStateOption\n  preserveState?: PreserveStateOption\n  replace?: boolean\n  only?: string[]\n  except?: string[]\n  onCancelToken?: (cancelToken: import('axios').CancelTokenSource) => void\n  onBefore?: () => void\n  onStart?: () => void\n  onProgress?: (progress: Progress) => void\n  onFinish?: () => void\n  onCancel?: () => void\n  onSuccess?: () => void\n  onError?: () => void\n  queryStringArrayFormat?: 'indices' | 'brackets'\n}\n\nexport type InertiaLinkProps = BaseInertiaLinkProps &\n  Omit<React.HTMLAttributes<HTMLElement>, keyof BaseInertiaLinkProps> &\n  Omit<React.AllHTMLAttributes<HTMLElement>, keyof BaseInertiaLinkProps>\n\nconst Link = forwardRef<unknown, InertiaLinkProps>(\n  (\n    {\n      children,\n      as = 'a',\n      data = {},\n      href,\n      method = 'get',\n      preserveScroll = false,\n      preserveState = null,\n      replace = false,\n      only = [],\n      except = [],\n      headers = {},\n      queryStringArrayFormat = 'brackets',\n      onClick = noop,\n      onCancelToken = noop,\n      onBefore = noop,\n      onStart = noop,\n      onProgress = noop,\n      onFinish = noop,\n      onCancel = noop,\n      onSuccess = noop,\n      onError = noop,\n      ...props\n    },\n    ref,\n  ) => {\n    const visit = useCallback(\n      (event: React.MouseEvent) => {\n        onClick(event)\n\n        if (shouldIntercept(event)) {\n          event.preventDefault()\n\n          router.visit(href, {\n            data,\n            method,\n            preserveScroll,\n            preserveState: preserveState ?? method !== 'get',\n            replace,\n            only,\n            except,\n            headers,\n            onCancelToken,\n            onBefore,\n            onStart,\n            onProgress,\n            onFinish,\n            onCancel,\n            onSuccess,\n            onError,\n          })\n        }\n      },\n      [\n        data,\n        href,\n        method,\n        preserveScroll,\n        preserveState,\n        replace,\n        only,\n        except,\n        headers,\n        onClick,\n        onCancelToken,\n        onBefore,\n        onStart,\n        onProgress,\n        onFinish,\n        onCancel,\n        onSuccess,\n        onError,\n      ],\n    )\n\n    as = as.toLowerCase()\n    method = method.toLowerCase() as Method\n    const [_href, _data] = mergeDataIntoQueryString(method, href || '', data, queryStringArrayFormat)\n    href = _href\n    data = _data\n\n    if (as === 'a' && method !== 'get') {\n      console.warn(\n        `Creating POST/PUT/PATCH/DELETE <a> links is discouraged as it causes \"Open Link in New Tab/Window\" accessibility issues.\\n\\nPlease specify a more appropriate element using the \"as\" attribute. For example:\\n\\n<Link href=\"${href}\" method=\"${method}\" as=\"button\">...</Link>`,\n      )\n    }\n\n    return createElement(\n      as,\n      {\n        ...props,\n        ...(as === 'a' ? { href } : {}),\n        ref,\n        onClick: visit,\n      },\n      children,\n    )\n  },\n)\nLink.displayName = 'InertiaLink'\n\nexport default Link\n", "import { FormDataConvertible, Method, Progress, router, VisitOptions } from '@inertiajs/core'\nimport isEqual from 'lodash.isequal'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport useRemember from './useRemember'\n\ntype setDataByObject<TForm> = (data: TForm) => void\ntype setDataByMethod<TForm> = (data: (previousData: TForm) => TForm) => void\ntype setDataByKeyValuePair<TForm> = <K extends keyof TForm>(key: K, value: TForm[K]) => void\ntype FormDataType = object\n\nexport interface InertiaFormProps<TForm extends FormDataType> {\n  data: TForm\n  isDirty: boolean\n  errors: Partial<Record<keyof TForm, string>>\n  hasErrors: boolean\n  processing: boolean\n  progress: Progress | null\n  wasSuccessful: boolean\n  recentlySuccessful: boolean\n  setData: setDataByObject<TForm> & setDataByMethod<TForm> & setDataByKeyValuePair<TForm>\n  transform: (callback: (data: TForm) => object) => void\n  setDefaults(): void\n  setDefaults(field: keyof TForm, value: FormDataConvertible): void\n  setDefaults(fields: Partial<TForm>): void\n  reset: (...fields: (keyof TForm)[]) => void\n  clearErrors: (...fields: (keyof TForm)[]) => void\n  setError(field: keyof TForm, value: string): void\n  setError(errors: Record<keyof TForm, string>): void\n  submit: (method: Method, url: string, options?: VisitOptions) => void\n  get: (url: string, options?: VisitOptions) => void\n  patch: (url: string, options?: VisitOptions) => void\n  post: (url: string, options?: VisitOptions) => void\n  put: (url: string, options?: VisitOptions) => void\n  delete: (url: string, options?: VisitOptions) => void\n  cancel: () => void\n}\nexport default function useForm<TForm extends FormDataType>(initialValues?: TForm): InertiaFormProps<TForm>\nexport default function useForm<TForm extends FormDataType>(\n  rememberKey: string,\n  initialValues?: TForm,\n): InertiaFormProps<TForm>\nexport default function useForm<TForm extends FormDataType>(\n  rememberKeyOrInitialValues?: string | TForm,\n  maybeInitialValues?: TForm,\n): InertiaFormProps<TForm> {\n  const isMounted = useRef(null)\n  const rememberKey = typeof rememberKeyOrInitialValues === 'string' ? rememberKeyOrInitialValues : null\n  const [defaults, setDefaults] = useState(\n    (typeof rememberKeyOrInitialValues === 'string' ? maybeInitialValues : rememberKeyOrInitialValues) || ({} as TForm),\n  )\n  const cancelToken = useRef(null)\n  const recentlySuccessfulTimeoutId = useRef(null)\n  const [data, setData] = rememberKey ? useRemember(defaults, `${rememberKey}:data`) : useState(defaults)\n  const [errors, setErrors] = rememberKey\n    ? useRemember({} as Partial<Record<keyof TForm, string>>, `${rememberKey}:errors`)\n    : useState({} as Partial<Record<keyof TForm, string>>)\n  const [hasErrors, setHasErrors] = useState(false)\n  const [processing, setProcessing] = useState(false)\n  const [progress, setProgress] = useState(null)\n  const [wasSuccessful, setWasSuccessful] = useState(false)\n  const [recentlySuccessful, setRecentlySuccessful] = useState(false)\n  const transform = useRef((data) => data)\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  const submit = useCallback(\n    (method, url, options = {}) => {\n      const _options = {\n        ...options,\n        onCancelToken: (token) => {\n          cancelToken.current = token\n\n          if (options.onCancelToken) {\n            return options.onCancelToken(token)\n          }\n        },\n        onBefore: (visit) => {\n          setWasSuccessful(false)\n          setRecentlySuccessful(false)\n          clearTimeout(recentlySuccessfulTimeoutId.current)\n\n          if (options.onBefore) {\n            return options.onBefore(visit)\n          }\n        },\n        onStart: (visit) => {\n          setProcessing(true)\n\n          if (options.onStart) {\n            return options.onStart(visit)\n          }\n        },\n        onProgress: (event) => {\n          setProgress(event)\n\n          if (options.onProgress) {\n            return options.onProgress(event)\n          }\n        },\n        onSuccess: (page) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n            setErrors({})\n            setHasErrors(false)\n            setWasSuccessful(true)\n            setRecentlySuccessful(true)\n            recentlySuccessfulTimeoutId.current = setTimeout(() => {\n              if (isMounted.current) {\n                setRecentlySuccessful(false)\n              }\n            }, 2000)\n          }\n\n          if (options.onSuccess) {\n            return options.onSuccess(page)\n          }\n        },\n        onError: (errors) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n            setErrors(errors)\n            setHasErrors(true)\n          }\n\n          if (options.onError) {\n            return options.onError(errors)\n          }\n        },\n        onCancel: () => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n          }\n\n          if (options.onCancel) {\n            return options.onCancel()\n          }\n        },\n        onFinish: () => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n          }\n\n          cancelToken.current = null\n\n          if (options.onFinish) {\n            return options.onFinish()\n          }\n        },\n      }\n\n      if (method === 'delete') {\n        router.delete(url, { ..._options, data: transform.current(data) })\n      } else {\n        router[method](url, transform.current(data), _options)\n      }\n    },\n    [data, setErrors],\n  )\n\n  const setDataFunction = useCallback(\n    (keyOrData: keyof TForm | Function | TForm, maybeValue?: TForm[keyof TForm]) => {\n      if (typeof keyOrData === 'string') {\n        setData((data) => ({ ...data, [keyOrData]: maybeValue }))\n      } else if (typeof keyOrData === 'function') {\n        setData((data) => keyOrData(data))\n      } else {\n        setData(keyOrData as TForm)\n      }\n    },\n    [setData],\n  )\n\n  const setDefaultsFunction = useCallback(\n    (fieldOrFields?: keyof TForm | Partial<TForm>, maybeValue?: FormDataConvertible) => {\n      if (typeof fieldOrFields === 'undefined') {\n        setDefaults(() => data)\n      } else {\n        setDefaults((defaults) => ({\n          ...defaults,\n          ...(typeof fieldOrFields === 'string' ? { [fieldOrFields]: maybeValue } : (fieldOrFields as TForm)),\n        }))\n      }\n    },\n    [data, setDefaults],\n  )\n\n  const reset = useCallback(\n    (...fields) => {\n      if (fields.length === 0) {\n        setData(defaults)\n      } else {\n        setData((data) =>\n          (Object.keys(defaults) as Array<keyof TForm>)\n            .filter((key) => fields.includes(key))\n            .reduce(\n              (carry, key) => {\n                carry[key] = defaults[key]\n                return carry\n              },\n              { ...data },\n            ),\n        )\n      }\n    },\n    [setData, defaults],\n  )\n\n  const setError = useCallback(\n    (fieldOrFields: keyof TForm | Record<keyof TForm, string>, maybeValue?: string) => {\n      setErrors((errors) => {\n        const newErrors = {\n          ...errors,\n          ...(typeof fieldOrFields === 'string'\n            ? { [fieldOrFields]: maybeValue }\n            : (fieldOrFields as Record<keyof TForm, string>)),\n        }\n        setHasErrors(Object.keys(newErrors).length > 0)\n        return newErrors\n      })\n    },\n    [setErrors, setHasErrors],\n  )\n\n  const clearErrors = useCallback(\n    (...fields) => {\n      setErrors((errors) => {\n        const newErrors = (Object.keys(errors) as Array<keyof TForm>).reduce(\n          (carry, field) => ({\n            ...carry,\n            ...(fields.length > 0 && !fields.includes(field) ? { [field]: errors[field] } : {}),\n          }),\n          {},\n        )\n        setHasErrors(Object.keys(newErrors).length > 0)\n        return newErrors\n      })\n    },\n    [setErrors, setHasErrors],\n  )\n\n  const createSubmitMethod = (method) => (url, options) => {\n    submit(method, url, options)\n  }\n  const get = useCallback(createSubmitMethod('get'), [submit])\n  const post = useCallback(createSubmitMethod('post'), [submit])\n  const put = useCallback(createSubmitMethod('put'), [submit])\n  const patch = useCallback(createSubmitMethod('patch'), [submit])\n  const deleteMethod = useCallback(createSubmitMethod('delete'), [submit])\n\n  const cancel = useCallback(() => {\n    if (cancelToken.current) {\n      cancelToken.current.cancel()\n    }\n  }, [])\n\n  const transformFunction = useCallback((callback) => {\n    transform.current = callback\n  }, [])\n\n  return {\n    data,\n    setData: setDataFunction,\n    isDirty: !isEqual(data, defaults),\n    errors,\n    hasErrors,\n    processing,\n    progress,\n    wasSuccessful,\n    recentlySuccessful,\n    transform: transformFunction,\n    setDefaults: setDefaultsFunction,\n    reset,\n    setError,\n    clearErrors,\n    submit,\n    get,\n    post,\n    put,\n    patch,\n    delete: deleteMethod,\n    cancel,\n  }\n}\n", "import { router } from '@inertiajs/core'\nimport { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport default function useRemember<State>(\n  initialState: State,\n  key?: string,\n): [State, Dispatch<SetStateAction<State>>] {\n  const [state, setState] = useState(() => {\n    const restored = router.restore(key) as State\n\n    return restored !== undefined ? restored : initialState\n  })\n\n  useEffect(() => {\n    router.remember(state, key)\n  }, [state, key])\n\n  return [state, setState]\n}\n\n/** @deprecated use `useRemember` instead */\nexport function useRememberedState<State>(initialState: State, key?: string): [State, Dispatch<SetStateAction<State>>] {\n  console.warn(\n    'The \"useRememberedState\" hook has been deprecated and will be removed in a future release. Use \"useRemember\" instead.',\n  )\n  return useRemember(initialState, key)\n}\n", "import { Page, PageProps } from '@inertiajs/core'\nimport { useContext } from 'react'\nimport PageContext from './PageContext'\n\nexport default function usePage<TPageProps extends PageProps = PageProps>(): Page<TPageProps> {\n  const page = useContext(PageContext)\n\n  if (!page) {\n    throw new Error('usePage must be used within the Inertia component')\n  }\n\n  return page\n}\n"],
  "mappings": "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",
  "names": ["Router", "setupProgress", "createElement", "createHeadManager", "router", "createElement", "useEffect", "useMemo", "useState", "createContext", "headContext", "HeadContext_default", "createContext", "pageContext", "PageContext_default", "App", "children", "initialPage", "initialComponent", "resolveComponent", "titleCallback", "onHeadUpdate", "current", "setCurrent", "useState", "headManager", "useMemo", "createHeadManager", "title", "useEffect", "router", "component", "page", "preserveState", "createElement", "HeadContext_default", "PageContext_default", "renderChildren", "Component", "props", "key", "child", "Layout", "createInertiaApp", "id", "resolve", "setup", "title", "progress", "page", "render", "isServer", "el", "initialPage", "resolveComponent", "name", "module", "head", "reactApp", "initialComponent", "App", "elements", "setupProgress", "body", "createElement", "React", "useContext", "useEffect", "useMemo", "Head", "children", "title", "headManager", "useContext", "HeadContext_default", "provider", "useMemo", "useEffect", "isUnaryTag", "node", "renderTagStart", "attrs", "carry", "name", "value", "renderTagChildren", "html", "child", "renderTag", "ensureNodeHasInertiaProp", "React", "renderNode", "renderNodes", "nodes", "computed", "tag", "Head_default", "mergeDataIntoQueryString", "router", "shouldIntercept", "createElement", "forwardRef", "useCallback", "noop", "Link", "children", "as", "data", "href", "method", "preserveScroll", "preserveState", "replace", "only", "except", "headers", "queryStringArrayFormat", "onClick", "onCancelToken", "onBefore", "onStart", "onProgress", "onFinish", "onCancel", "onSuccess", "onError", "props", "ref", "visit", "event", "_href", "_data", "Link_default", "router", "isEqual", "useCallback", "useEffect", "useRef", "useState", "router", "useEffect", "useState", "useRemember", "initialState", "key", "state", "setState", "restored", "useForm", "rememberKeyOrInitialValues", "maybeInitialValues", "isMounted", "useRef", "rememberKey", "defaults", "setDefaults", "useState", "cancelToken", "recentlySuccessfulTimeoutId", "data", "setData", "useRemember", "errors", "setErrors", "hasErrors", "setHasErrors", "processing", "setProcessing", "progress", "setProgress", "wasSuccessful", "setWasSuccessful", "recentlySuccessful", "setRecentlySuccessful", "transform", "useEffect", "submit", "useCallback", "method", "url", "options", "_options", "token", "visit", "event", "page", "router", "setDataFunction", "keyOrData", "maybeValue", "setDefaultsFunction", "fieldOrFields", "reset", "fields", "key", "carry", "setError", "newErrors", "clearErrors", "field", "createSubmitMethod", "get", "post", "put", "patch", "deleteMethod", "cancel", "transformFunction", "callback", "isEqual", "useContext", "usePage", "page", "useContext", "PageContext_default", "router", "Router"]
}
